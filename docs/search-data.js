window.Aiken.initSearch([{"doc":"fuzz_util/fuzzer","title":"address_fuzzer","content":"address_fuzzer(\n  from: FromCredential,\n  with_delegation: WithDelegation,\n) -&gt; Fuzzer&lt;Address&gt;\n Fuzzes an address. See [`FromCredential`](#FromCredential) and [`WithDelegation`](#WithDelegation)\n for more information and usage examples.","url":"fuzz_util/fuzzer.html#address_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"credential_fuzzer","content":"credential_fuzzer(from: FromCredential) -&gt; Fuzzer&lt;address.Credential&gt;\n Fuzzes either `Script` or `VerificationKey` credentials determined by [`FromCredential`](#FromCredential)\n ```aiken\n credential_fuzzer(FromScript(Fuzzed))\n credential_fuzzer(FromKey(Fuzzed))\n credential_fuzzer(FromFuzzed)\n ```\n `FromScript` and `FromKey` with `Specified` [`CredentialHash`](#CredentialHash) are also supported\n but most of the time there&#39;s no reason to use a fuzzer for a known credential type and hash.","url":"fuzz_util/fuzzer.html#credential_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"script_hash_fuzzer","content":"script_hash_fuzzer() -&gt; Fuzzer&lt;ScriptHash&gt;\n Script Hash with 28 bytes fuzzer.","url":"fuzz_util/fuzzer.html#script_hash_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"verification_key_hash_fuzzer","content":"verification_key_hash_fuzzer() -&gt; Fuzzer&lt;VerificationKeyHash&gt;\n Verification Key Hash with 28 bytes fuzzer.","url":"fuzz_util/fuzzer.html#verification_key_hash_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"policy_id_fuzzer","content":"policy_id_fuzzer() -&gt; Fuzzer&lt;PolicyId&gt;\n Policy ID with 28 bytes fuzzer.","url":"fuzz_util/fuzzer.html#policy_id_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"asset_name_fuzzer","content":"asset_name_fuzzer() -&gt; Fuzzer&lt;AssetName&gt;\n Asset Name with 0-32 bytes fuzzer.","url":"fuzz_util/fuzzer.html#asset_name_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"value_fuzzer","content":"value_fuzzer(min_lovelaces: assets.Lovelace) -&gt; Fuzzer&lt;assets.Value&gt;\n A `Value` fuzzer,\n guaranteed to include some amount of ADA (minimum must be specified)\n\n Fuzzes a list of assets with some ADA with quantity of at least as the specified minimum amount, and 0-10 tokens:\n ```aiken\n assets.from_asset_list([\n   Pair(&quot;&quot;, [Pair(&quot;&quot;, lovelace_count)]),\n   ..,\n   Pair(policy_id, [Pair(token_name, quantity), ..])\n ])\n ```\n Where,\n - `lovelace_count` `&lt;-` [`fuzz.int_at_least`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#int_at_least)`(min_lovelaces)`\n - `policy_id` `&lt;-` [`policy_id_fuzzer`](#policy_id_fuzzer)`()`\n - `token_name` `&lt;-` [`asset_name_fuzzer`](#asset_name_fuzzer)`()`\n - `quantity` `&lt;-` [`fuzz.int_at_least`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#int_at_least)`(1)`","url":"fuzz_util/fuzzer.html#value_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"single_asset_value_fuzzer","content":"single_asset_value_fuzzer() -&gt; Fuzzer&lt;assets.Value&gt;\n A `Value` fuzzer with a single asset.\n Randomly generates the Policy ID.\n\n Fuzzes the following token:\n ```aiken\n policy_id |&gt; assets.from_asset(token_name, quantity)\n ```\n Where,\n - `policy_id` `&lt;-` [`policy_id_fuzzer`](#policy_id_fuzzer)`()`\n - `token_name` `&lt;-` [`asset_name_fuzzer`](#asset_name_fuzzer)`()`\n - `quantity` `&lt;-` [`fuzz.int_at_least`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#int_at_least)`(1)`","url":"fuzz_util/fuzzer.html#single_asset_value_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"single_specific_asset_value_fuzzer","content":"single_specific_asset_value_fuzzer(policy_id: PolicyId) -&gt; Fuzzer&lt;assets.Value&gt;\n A fuzzer for `Value` with a single asset.\n Unsafely expects 28 bytes long Policy ID to be provided.\n\n Fuzzes the following token:\n ```aiken\n policy_id |&gt; assets.from_asset(token_name, quantity)\n ```\n Where,\n - `token_name` `&lt;-` [`asset_name_fuzzer`](#asset_name_fuzzer)`()`\n - `quantity` `&lt;-` [`fuzz.int_at_least`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#int_at_least)`(1)`","url":"fuzz_util/fuzzer.html#single_specific_asset_value_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"mint_fuzzer","content":"mint_fuzzer() -&gt; Fuzzer&lt;assets.Value&gt;\n A `Value` fuzzer without any lovelaces.\n\n Fuzzes 1-10 tokens:\n ```aiken\n assets.from_asset_list([\n   Pair(policy_id, [Pair(token_name, quantity), ..])\n   ..,\n ])\n ```\n Where,\n - `policy_id` `&lt;-` [`policy_id_fuzzer`](#policy_id_fuzzer)`()`\n - `token_name` `&lt;-` [`asset_name_fuzzer`](#asset_name_fuzzer)`()`\n - `quantity` `&lt;-` [`fuzz.int_at_least`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#int_at_least)`(1)`","url":"fuzz_util/fuzzer.html#mint_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"stake_pool_id_fuzzer","content":"stake_pool_id_fuzzer() -&gt; Fuzzer&lt;StakePoolId&gt;\n Stake Pool ID with 28 bytes fuzzer.","url":"fuzz_util/fuzzer.html#stake_pool_id_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"delegate_representative_fuzzer","content":"delegate_representative_fuzzer(\n  when_registered: FromCredential,\n) -&gt; Fuzzer&lt;DelegateRepresentative&gt;\n Fuzzes either `Registered`([`FromCredential`](#FromCredential)) | `AlwaysAbstain` | `AlwaysNoConfidence`\n ```aiken\n // Fuzzes either:\n // - Registered(&quot;KNOWN_SCRIPT_HASH&quot; |&gt; Script)\n // - AlwaysAbstain\n // - AlwaysNoConfidence\n delegate_representative_fuzzer(when_registered: FromScript(Specified(&quot;KNOWN_SCRIPT_HASH&quot;)))\n \n // Fuzzes either:\n // - Registered(Any Script)\n // - AlwaysAbstain\n // - AlwaysNoConfidence\n delegate_representative_fuzzer(when_registered: FromScript(Fuzzed))\n \n // Fuzzes either:\n // - Registered(&quot;KNOWN_KEY_HASH&quot; |&gt; VerificationKey)\n // - AlwaysAbstain\n // - AlwaysNoConfidence\n delegate_representative_fuzzer(when_registered: FromKey(Specified(&quot;KNOWN_KEY_HASH&quot;)))\n \n // Fuzzes either:\n // - Registered(Any VerificationKey)\n // - AlwaysAbstain\n // - AlwaysNoConfidence\n delegate_representative_fuzzer(when_registered: FromKey(Fuzzed))\n \n // Fuzzes either:\n // - Registered(Any Script or Any VerificationKey)\n // - AlwaysAbstain\n // - AlwaysNoConfidence\n delegate_representative_fuzzer(when_registered: FromFuzzed)\n ```","url":"fuzz_util/fuzzer.html#delegate_representative_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"delegate_fuzzer","content":"delegate_fuzzer(\n  when_block_production: StakePoolHash,\n  when_vote: VoteDelegateRepresentative,\n  when_both: (StakePoolHash, VoteDelegateRepresentative),\n) -&gt; Fuzzer&lt;certificate.Delegate&gt;\n Fuzzes either:\n - `DelegateBlockProduction`([`StakePoolHash`](#StakePoolHash))\n - `DelegateVote`([`VoteDelegateRepresentative`](#VoteDelegateRepresentative))\n - `DelegateBoth`([`StakePoolHash`](#StakePoolHash), [`VoteDelegateRepresentative`](#VoteDelegateRepresentative))","url":"fuzz_util/fuzzer.html#delegate_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"constitution_fuzzer","content":"constitution_fuzzer(some_guardrails: CredentialHash) -&gt; Fuzzer&lt;Constitution&gt;\n Fuzzes a `Constitution` with either `Some`(`&quot;KNOWN_SCRIPT_HASH&quot;` | `Any Script Hash`) or `None`\n ```aiken\n // Fuzzes either:\n // - Constitution(Some(&quot;KNOWN_SCRIPT_HASH&quot; |&gt; Script))\n // - Constitution(None)\n constitution_fuzzer(some_guardrails: Specified(&quot;KNOWN_SCRIPT_HASH&quot;))\n \n // Fuzzes either:\n // - Constitution(Some(Any Script Hash))\n // - Constitution(None)\n constitution_fuzzer(some_guardrails: Fuzzed)\n ```","url":"fuzz_util/fuzzer.html#constitution_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"governance_action_id_fuzzer","content":"governance_action_id_fuzzer() -&gt; Fuzzer&lt;GovernanceActionId&gt;\n Governance Action ID fuzzer,\n Transaction ID with 32 bytes,\n and output index between 0 and 512.","url":"fuzz_util/fuzzer.html#governance_action_id_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"vote_fuzzer","content":"vote_fuzzer() -&gt; Fuzzer&lt;Vote&gt;\n Fuzzes either `Yes` | `No` | `Abstain`","url":"fuzz_util/fuzzer.html#vote_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"voter_fuzzer","content":"voter_fuzzer(\n  when_constitutional_committee_member: FromCredential,\n  when_delegate_representative: FromCredential,\n  when_stake_pool: StakePoolHash,\n) -&gt; Fuzzer&lt;Voter&gt;\n Fuzzes either:\n - `ConstitutionalCommitteeMember`([`FromCredential`](#FromCredential))\n - `DelegateRepresentative`([`FromCredential`](#FromCredential))\n - `StakePool`([`StakePoolHash`](#StakePoolHash))","url":"fuzz_util/fuzzer.html#voter_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"datum_fuzzer","content":"datum_fuzzer() -&gt; Fuzzer&lt;transaction.Datum&gt;\n Fuzzes either `NoDatum` | `DatumHash`(`data_hash`) | `InlineDatum`(`data`)\n\n Where,\n - `data_hash` `&lt;-` [`data_hash_fuzzer`](#data_hash_fuzzer)`()`\n - `data` `&lt;-` [`data_fuzzer`](#data_fuzzer)`()`","url":"fuzz_util/fuzzer.html#datum_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"data_hash_fuzzer","content":"data_hash_fuzzer() -&gt; Fuzzer&lt;DataHash&gt;\n Data Hash with 32 bytes fuzzer.","url":"fuzz_util/fuzzer.html#data_hash_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"data_fuzzer","content":"data_fuzzer() -&gt; Fuzzer&lt;Data&gt;\n Fuzzes either upcasted `Bool` | `Byte` | `ByteArray` | `Int`\n\n Where,\n |   Data                                                                     |   Possible Value    | Chance |\n |----------------------------------------------------------------------------|---------------------|--------|\n | [`Bool`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#bool)           |  `True` \\| `False`  |    25% |\n | [`Byte`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#byte)           |      `0`-`255`      |    25% |\n | [`ByteArray`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#bytearray) | `&quot;random 32 bytes&quot;` |    25% |\n | [`Int`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#int)             |   `-255`-`16383`    |    25% |","url":"fuzz_util/fuzzer.html#data_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"output_reference_fuzzer","content":"output_reference_fuzzer() -&gt; Fuzzer&lt;OutputReference&gt;\n Output Reference fuzzer,\n Transaction ID with 32 bytes,\n and output index between 0 and 512.","url":"fuzz_util/fuzzer.html#output_reference_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"transaction_id_fuzzer","content":"transaction_id_fuzzer() -&gt; Fuzzer&lt;TransactionId&gt;\n Transaction ID with 32 bytes fuzzer.","url":"fuzz_util/fuzzer.html#transaction_id_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"user_output_fuzzer","content":"user_output_fuzzer() -&gt; Fuzzer&lt;transaction.Output&gt;\n Simple wallet UTxO fuzzer,\n with a random number of tokens/NFTs.\n\n Fuzzes the following UTxO:\n ```aiken\n transaction.Output {\n   address: Address(Fuzzed |&gt; FromKey, Fuzzed |&gt; WithDelegationKey),\n   value: 2 or more ADA and 0-10 tokens/NFTs,\n   datum: NoDatum,\n   reference_script: None,\n }\n ```","url":"fuzz_util/fuzzer.html#user_output_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"user_outputs_fuzzer","content":"user_outputs_fuzzer() -&gt; Fuzzer&lt;List&lt;transaction.Output&gt;&gt;\n Simple (non-script) outputs fuzzer.\n\n Fuzzes a list between 1-10 elements of the following UTxO:\n ```aiken\n transaction.Output {\n   address: Address(Fuzzed |&gt; FromKey, Fuzzed |&gt; WithDelegationKey),\n   value: 2 or more ADA and 0-10 tokens/NFTs,\n   datum: NoDatum,\n   reference_script: None,\n }\n ```","url":"fuzz_util/fuzzer.html#user_outputs_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"specific_script_output_fuzzer","content":"specific_script_output_fuzzer(\n  script_hash: ScriptHash,\n  datum: transaction.Datum,\n) -&gt; Fuzzer&lt;transaction.Output&gt;\n Given a script hash and datum,\n this fuzzer generates a UTxO at an address which its payment part is the same as the given script hash.\n\n Fuzzes the following UTxO:\n ```aiken\n transaction.Output {\n   address: from_script(script_hash),\n   value: 2 or more ADA and 0-10 tokens/NFTs,\n   datum: transaction.Datum,\n   reference_script: None,\n }\n ```","url":"fuzz_util/fuzzer.html#specific_script_output_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"script_output_fuzzer","content":"script_output_fuzzer(\n  datum: transaction.Datum,\n) -&gt; Fuzzer&lt;(ScriptHash, transaction.Output)&gt;\n Returns a tuple where its first element is the random script hash (payment part of the UTxO&#39;s address).\n UTxO value is also random, with 2 ADA.\n\n Fuzzes the following tuple:\n ```aiken\n (script_hash, utxo)\n ```\n Where,\n - `script_hash` `&lt;-` [`script_hash_fuzzer`](#script_hash_fuzzer)`()`\n - `utxo` `&lt;-` [`specific_script_output_fuzzer`](#specific_script_output_fuzzer)`(script_hash, datum)`\n   ```aiken\n   transaction.Output {\n     address: from_script(script_hash),\n     value: 2 or more ADA and 0-10 tokens/NFTs,\n     datum: transaction.Datum,\n     reference_script: None,\n   }\n   ```","url":"fuzz_util/fuzzer.html#script_output_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"authentic_script_output_fuzzer","content":"authentic_script_output_fuzzer(\n  datum: transaction.Datum,\n) -&gt; Fuzzer&lt;(ScriptHash, transaction.Output)&gt;\n UTxO fuzzer, where the value is composed of 2 ADA and a Beacon NFT,\n such that its Policy ID is equal to the script credential of the payment part of UTxO&#39;s address.\n This script hash is also returned.\n\n Fuzzes the following tuple:\n ```aiken\n (script_hash, utxo)\n ```\n Where,\n - `policy_id: script_hash` `&lt;-` [`script_hash_fuzzer`](#script_hash_fuzzer)`()`\n - `asset_name` `&lt;-` [`asset_name_fuzzer`](#asset_name_fuzzer)`()`\n - `utxo` `=`\n   ```aiken\n   transaction.Output {\n     address: address.from_script(script_hash),\n     value: 2 ADA and a Beacon NFT (policy_id: script_hash, asset_name, quantity: 1),\n     datum,\n     reference_script: None,\n   }\n   ```","url":"fuzz_util/fuzzer.html#authentic_script_output_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"user_input_fuzzer","content":"user_input_fuzzer() -&gt; Fuzzer&lt;transaction.Input&gt;\n Simple wallet UTxO fuzzer,\n with a random reference output and a random number of tokens/NFTs.\n\n Fuzzes the following Transaction Input:\n ```aiken\n transaction.Input(output_reference, output)\n ```\n Where,\n - `output_reference` `&lt;-` [`output_reference_fuzzer`](#output_reference_fuzzer)`()`\n - `output` `&lt;-` [`user_output_fuzzer`](#user_output_fuzzer)`()`\n   ```aiken\n   transaction.Output {\n     address: Address(Fuzzed |&gt; FromKey, Fuzzed |&gt; WithDelegationKey),\n     value: 2 or more ADA and 0-10 tokens/NFTs,\n     datum: NoDatum,\n     reference_script: None,\n   }\n   ```","url":"fuzz_util/fuzzer.html#user_input_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"user_inputs_fuzzer","content":"user_inputs_fuzzer() -&gt; Fuzzer&lt;List&lt;transaction.Input&gt;&gt;\n Simple (non-script) inputs fuzzer.\n\n Fuzzes a list between 1-10 elements of the following Transaction Input:\n ```aiken\n transaction.Input(output_reference, output)\n ```\n Where,\n - `output_reference` `&lt;-` [`output_reference_fuzzer`](#output_reference_fuzzer)`()`\n - `output` `&lt;-` [`user_output_fuzzer`](#user_output_fuzzer)`()`\n   ```aiken\n   transaction.Output {\n     address: Address(Fuzzed |&gt; FromKey, Fuzzed |&gt; WithDelegationKey),\n     value: 2 or more ADA and 0-10 tokens/NFTs,\n     datum: NoDatum,\n     reference_script: None,\n   }\n   ```","url":"fuzz_util/fuzzer.html#user_inputs_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"specific_script_input_fuzzer","content":"specific_script_input_fuzzer(\n  script_hash: ScriptHash,\n  datum: transaction.Datum,\n) -&gt; Fuzzer&lt;transaction.Input&gt;\n Similar to [`specific_script_output_fuzzer`](#specific_script_output_fuzzer),\n with an additional randomized wrapper for output reference.\n\n Fuzzes the following Transaction Input:\n ```aiken\n transaction.Input(output_reference, output)\n ```\n Where,\n - `output_reference` `&lt;-` [`output_reference_fuzzer`](#output_reference_fuzzer)`()`\n - `output` `=`\n   ```aiken\n   transaction.Output {\n     address: from_script(script_hash),\n     value: 2 or more ADA and 0-10 tokens/NFTs,\n     datum: transaction.Datum,\n     reference_script: None,\n   }\n   ```","url":"fuzz_util/fuzzer.html#specific_script_input_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"script_input_fuzzer","content":"script_input_fuzzer(\n  datum: transaction.Datum,\n) -&gt; Fuzzer&lt;(ScriptHash, transaction.Input)&gt;\n Similar to [`script_output_fuzzer`](#script_output_fuzzer),\n with an additional randomized wrapper for output reference.\n\n Fuzzes the following tuple:\n ```aiken\n (script_hash, script_input)\n ```\n Where,\n - `script_hash` `&lt;-` [`script_hash_fuzzer`](#script_hash_fuzzer)`()`\n - `output_reference` `&lt;-` [`output_reference_fuzzer`](#output_reference_fuzzer)`()`\n - `output` `&lt;-` [`specific_script_output_fuzzer`](#specific_script_output_fuzzer)`(script_hash, datum)`\n   ```aiken\n   transaction.Output {\n     address: from_script(script_hash),\n     value: 2 or more ADA and 0-10 tokens/NFTs,\n     datum: transaction.Datum,\n     reference_script: None,\n   }\n   ```\n - `script_input` `=`\n   ```aiken\n   transaction.Input(output_reference, output)\n   ```","url":"fuzz_util/fuzzer.html#script_input_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"authentic_script_input_fuzzer","content":"authentic_script_input_fuzzer(\n  datum: transaction.Datum,\n) -&gt; Fuzzer&lt;(ScriptHash, transaction.Input)&gt;\n Similar to [`authentic_script_output_fuzzer`](#script_output_fuzzer),\n with and additional randomized wrapper for output reference.\n\n Fuzzes the following tuple:\n ```aiken\n (script_hash, script_input)\n ```\n Where,\n - `policy_id: script_hash` `&lt;-` [`script_hash_fuzzer`](#script_hash_fuzzer)`()`\n - `asset_name` `&lt;-` [`asset_name_fuzzer`](#asset_name_fuzzer)`()`\n - `output_reference` `&lt;-` [`output_reference_fuzzer`](#output_reference_fuzzer)`()`\n - `output` `=`\n   ```aiken\n   transaction.Output {\n     address: address.from_script(script_hash),\n     value: 2 ADA and a Beacon NFT (policy_id: script_hash, asset_name, quantity: 1),\n     datum,\n     reference_script: None,\n   }\n   ```\n - `script_input` `=`\n   ```aiken\n   transaction.Input(output_reference, output)\n   ```","url":"fuzz_util/fuzzer.html#authentic_script_input_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"inputs_with_an_authentic_script_input_fuzzer","content":"inputs_with_an_authentic_script_input_fuzzer(\n  datum: transaction.Datum,\n) -&gt; Fuzzer&lt;(ScriptHash, transaction.Input, List&lt;transaction.Input&gt;)&gt;\n Fuzzer for a sorted list of user/wallet inputs,\n with the addition of one authentic script input.\n\n Fuzzes the following tuple:\n ```aiken\n (script_hash, script_input, sorted_inputs)\n ```\n Where,\n - `policy_id: script_hash` `&lt;-` [`script_hash_fuzzer`](#script_hash_fuzzer)`()`\n - `asset_name` `&lt;-` [`asset_name_fuzzer`](#asset_name_fuzzer)`()`\n - `output_reference` `&lt;-` [`output_reference_fuzzer`](#output_reference_fuzzer)`()`\n - `output` `=`\n   ```aiken\n   transaction.Output {\n     address: address.from_script(script_hash),\n     value: 2 ADA and a Beacon NFT (policy_id: script_hash, asset_name, quantity: 1),\n     datum,\n     reference_script: None,\n   }\n   ```\n - `script_input` `=`\n   ```aiken\n   transaction.Input(output_reference, output)\n   ```\n - `wallet_inputs` `&lt;-` a list between 1-10 elements of `transaction.Input(output_reference, output)` where,\n     - `output_reference` `&lt;-` [`output_reference_fuzzer`](#output_reference_fuzzer)`()`\n     - `output` `&lt;-` [`user_output_fuzzer`](#user_output_fuzzer)`()`\n       ```aiken\n       transaction.Output {\n         address: Address(Fuzzed |&gt; FromKey, Fuzzed |&gt; WithDelegationKey),\n         value: 2 or more ADA and 0-10 tokens/NFTs,\n         datum: NoDatum,\n         reference_script: None,\n       }\n       ```\n - `sorted_inputs` `=` `sorted_by_output_reference([script_input, ..wallet_inputs])`","url":"fuzz_util/fuzzer.html#inputs_with_an_authentic_script_input_fuzzer"},{"doc":"fuzz_util/fuzzer","title":"tuple","content":"tuple(a: Fuzzer&lt;a&gt;, b: Fuzzer&lt;b&gt;) -&gt; Fuzzer&lt;(a, b)&gt;\n A convenient way of generating tuples instead of doing [`map2`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#map2)\n ```aiken\n fuzz.map2(\n   fuzzer_a, fuzzer_b,\n   fn(a, b) { (a, b) }\n )\n ```","url":"fuzz_util/fuzzer.html#tuple"},{"doc":"fuzz_util/fuzzer","title":"tuple3","content":"tuple3(a: Fuzzer&lt;a&gt;, b: Fuzzer&lt;b&gt;, c: Fuzzer&lt;c&gt;) -&gt; Fuzzer&lt;(a, b, c)&gt;\n A convenient way of generating tuple3 instead of doing [`map3`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#map3)\n ```aiken\n fuzz.map3(\n   fuzzer_a, fuzzer_b, fuzzer_c,\n   fn(a, b, c) { (a, b, c) }\n )\n ```","url":"fuzz_util/fuzzer.html#tuple3"},{"doc":"fuzz_util/fuzzer","title":"tuple4","content":"tuple4(\n  a: Fuzzer&lt;a&gt;,\n  b: Fuzzer&lt;b&gt;,\n  c: Fuzzer&lt;c&gt;,\n  d: Fuzzer&lt;d&gt;,\n) -&gt; Fuzzer&lt;(a, b, c, d)&gt;\n A convenient way of generating tuple4 instead of doing [`map4`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#map4)\n ```aiken\n fuzz.map4(\n   fuzzer_a, fuzzer_b, fuzzer_c, fuzzer_d,\n   fn(a, b, c, d) { (a, b, c, d) }\n )\n ```","url":"fuzz_util/fuzzer.html#tuple4"},{"doc":"fuzz_util/fuzzer","title":"tuple5","content":"tuple5(\n  a: Fuzzer&lt;a&gt;,\n  b: Fuzzer&lt;b&gt;,\n  c: Fuzzer&lt;c&gt;,\n  d: Fuzzer&lt;d&gt;,\n  e: Fuzzer&lt;e&gt;,\n) -&gt; Fuzzer&lt;(a, b, c, d, e)&gt;\n A convenient way of generating tuple5 instead of doing [`map5`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#map5)\n ```aiken\n fuzz.map5(\n   fuzzer_a, fuzzer_b, fuzzer_c, fuzzer_d, fuzzer_e,\n   fn(a, b, c, d, e) { (a, b, c, d, e) }\n )\n ```","url":"fuzz_util/fuzzer.html#tuple5"},{"doc":"fuzz_util/fuzzer","title":"tuple6","content":"tuple6(\n  a: Fuzzer&lt;a&gt;,\n  b: Fuzzer&lt;b&gt;,\n  c: Fuzzer&lt;c&gt;,\n  d: Fuzzer&lt;d&gt;,\n  e: Fuzzer&lt;e&gt;,\n  f: Fuzzer&lt;f&gt;,\n) -&gt; Fuzzer&lt;(a, b, c, d, e, f)&gt;\n A convenient way of generating tuple6 instead of doing [`map6`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#map6)\n ```aiken\n fuzz.map6(\n   fuzzer_a, fuzzer_b, fuzzer_c, fuzzer_d, fuzzer_e, fuzzer_f,\n   fn(a, b, c, d, e, f) { (a, b, c, d, e, f) }\n )\n ```","url":"fuzz_util/fuzzer.html#tuple6"},{"doc":"fuzz_util/fuzzer","title":"tuple7","content":"tuple7(\n  a: Fuzzer&lt;a&gt;,\n  b: Fuzzer&lt;b&gt;,\n  c: Fuzzer&lt;c&gt;,\n  d: Fuzzer&lt;d&gt;,\n  e: Fuzzer&lt;e&gt;,\n  f: Fuzzer&lt;f&gt;,\n  g: Fuzzer&lt;g&gt;,\n) -&gt; Fuzzer&lt;(a, b, c, d, e, f, g)&gt;\n A convenient way of generating tuple7 instead of doing [`map7`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#map7)\n ```aiken\n fuzz.map7(\n   fuzzer_a, fuzzer_b, fuzzer_c, fuzzer_d, fuzzer_e, fuzzer_f, fuzzer_g,\n   fn(a, b, c, d, e, f, g) { (a, b, c, d, e, f, g) }\n )\n ```","url":"fuzz_util/fuzzer.html#tuple7"},{"doc":"fuzz_util/fuzzer","title":"tuple8","content":"tuple8(\n  a: Fuzzer&lt;a&gt;,\n  b: Fuzzer&lt;b&gt;,\n  c: Fuzzer&lt;c&gt;,\n  d: Fuzzer&lt;d&gt;,\n  e: Fuzzer&lt;e&gt;,\n  f: Fuzzer&lt;f&gt;,\n  g: Fuzzer&lt;g&gt;,\n  h: Fuzzer&lt;h&gt;,\n) -&gt; Fuzzer&lt;(a, b, c, d, e, f, g, h)&gt;\n A convenient way of generating tuple8 instead of doing [`map8`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#map8)\n ```aiken\n fuzz.map8(\n   fuzzer_a, fuzzer_b, fuzzer_c, fuzzer_d, fuzzer_e, fuzzer_f, fuzzer_g, fuzzer_h,\n   fn(a, b, c, d, e, f, g, h) { (a, b, c, d, e, f, g, h) }\n )\n ```","url":"fuzz_util/fuzzer.html#tuple8"},{"doc":"fuzz_util/fuzzer","title":"tuple9","content":"tuple9(\n  a: Fuzzer&lt;a&gt;,\n  b: Fuzzer&lt;b&gt;,\n  c: Fuzzer&lt;c&gt;,\n  d: Fuzzer&lt;d&gt;,\n  e: Fuzzer&lt;e&gt;,\n  f: Fuzzer&lt;f&gt;,\n  g: Fuzzer&lt;g&gt;,\n  h: Fuzzer&lt;h&gt;,\n  i: Fuzzer&lt;i&gt;,\n) -&gt; Fuzzer&lt;(a, b, c, d, e, f, g, h, i)&gt;\n A convenient way of generating tuple9 instead of doing [`map9`](https://aiken-lang.github.io/fuzz/aiken/fuzz.html#map9)\n ```aiken\n fuzz.map9(\n   fuzzer_a, fuzzer_b, fuzzer_c, fuzzer_d, fuzzer_e, fuzzer_f, fuzzer_g, fuzzer_h, fuzzer_i,\n   fn(a, b, c, d, e, f, g, h, i) { (a, b, c, d, e, f, g, h, i) }\n )\n ```","url":"fuzz_util/fuzzer.html#tuple9"},{"doc":"fuzz_util/fuzzer","title":"CredentialHash","content":"CredentialHash {\n  Specified(Hash&lt;Blake2b_224, ByteArray&gt;)\n  Fuzzed\n}\n Alias: [`StakePoolHash`](#StakePoolHash)\nSpecified(Hash&lt;Blake2b_224, ByteArray&gt;)\n\nFuzzed\n","url":"fuzz_util/fuzzer.html#CredentialHash"},{"doc":"fuzz_util/fuzzer","title":"FromCredential","content":"FromCredential {\n  FromScript(CredentialHash)\n  FromKey(CredentialHash)\n  FromFuzzed\n}\n Used by:\n - [`address_fuzzer`](#address_fuzzer) to determine the payment part of a generated address\n - [`credential_fuzzer`](#credential_fuzzer) to determine the possible generated credential type\n - [`delegate_representative_fuzzer`](#delegate_representative_fuzzer) to determine the possible generated registered dRep credential type\nFromScript(CredentialHash)\n Payment part from script with known or any credential hash.\n Usage examples,\n ```aiken\n address_fuzzer(FromScript(Specified(&quot;KNOWN_SCRIPT_HASH&quot;)), staking_part)\n address_fuzzer(FromScript(Fuzzed), staking_part)\n ```\n See [`WithDelegation`](#WithDelegation) for more info on how to set the rule for the staking part.\nFromKey(CredentialHash)\n Payment part from key with known or any credential hash.\n Usage examples,\n ```aiken\n address_fuzzer(FromKey(Specified(&quot;KNOWN_KEY_HASH&quot;)), staking_part)\n address_fuzzer(FromKey(Fuzzed), staking_part)\n ```\n See [`WithDelegation`](#WithDelegation) for more info on how to set the rule for the staking part.\nFromFuzzed\n Payment part from script or key with `Fuzzed` `CredentialHash`.\n Usage example,\n ```aiken\n address_fuzzer(FromFuzzed, staking_part)\n ```\n See [`WithDelegation`](#WithDelegation) for more info on how to set the rule for the staking part.","url":"fuzz_util/fuzzer.html#FromCredential"},{"doc":"fuzz_util/fuzzer","title":"StakePoolHash","content":"StakePoolHash = CredentialHash\n\n","url":"fuzz_util/fuzzer.html#StakePoolHash"},{"doc":"fuzz_util/fuzzer","title":"VoteDelegateRepresentative","content":"VoteDelegateRepresentative {\n  VoteRegistered(FromCredential)\n  VoteAlwaysAbstain\n  VoteAlwaysNoConfidence\n  VoteFuzzed\n}\n Used by [`delegate_fuzzer`](#delegate_fuzzer) to determine the dRep type when the generated\n [`Delegate`](https://aiken-lang.github.io/stdlib/cardano/certificate.html#Delegate) is either:\n - `DelegateVote`([`DelegateRepresentative`](https://aiken-lang.github.io/stdlib/cardano/certificate.html#DelegateRepresentative))\n - `DelegateBoth`([`StakePoolId`](https://aiken-lang.github.io/stdlib/cardano/certificate.html#StakePoolId),\n   [`DelegateRepresentative`](https://aiken-lang.github.io/stdlib/cardano/certificate.html#DelegateRepresentative))\nVoteRegistered(FromCredential)\n\nVoteAlwaysAbstain\n\nVoteAlwaysNoConfidence\n\nVoteFuzzed\n","url":"fuzz_util/fuzzer.html#VoteDelegateRepresentative"},{"doc":"fuzz_util/fuzzer","title":"WithDelegation","content":"WithDelegation {\n  WithNoDelegation\n  WithDelegationScript(CredentialHash)\n  WithDelegationKey(CredentialHash)\n  WithTheSameDelegationScriptOrKey\n  WithFuzzedDelegation\n}\n Used by [`address_fuzzer`](#address_fuzzer) to determine the staking part of a generated address.\nWithNoDelegation\n Address generator with no staking part:\n ```aiken\n address_fuzzer(payment_part, WithNoDelegation)\n ```\n See [`FromCredential`](#FromCredential) for more info on how to set the rule for the payment part.\nWithDelegationScript(CredentialHash)\n Address generator with staking part from script with known or any credential hash:\n ```aiken\n address_fuzzer(payment_part, WithDelegationScript(Specified(&quot;KNOWN_SCRIPT_HASH&quot;)))\n address_fuzzer(payment_part, WithDelegationScript(Fuzzed))\n ```\n See [`FromCredential`](#FromCredential) for more info on how to set the rule for the payment part.\nWithDelegationKey(CredentialHash)\n Address generator with staking part from key with known or any credential hash:\n ```aiken\n address_fuzzer(payment_part, WithDelegationKey(Specified(&quot;KNOWN_KEY_HASH&quot;)))\n address_fuzzer(payment_part, WithDelegationKey(Fuzzed))\n ```\n See [`FromCredential`](#FromCredential) for more info on how to set the rule for the payment part.\nWithTheSameDelegationScriptOrKey\n Address generator with staking part with the same credential as the payment part:\n ```aiken\n address_fuzzer(payment_part, WithTheSameDelegationScriptOrKey)\n ```\n\n Useful for generating multi-purpose validator addresses, because:\n - If the address payment credential is `Script`(`&quot;CURRENT_SCRIPT_HASH&quot;`), then `WithTheSameDelegationScriptOrKey`\n   will generate an address with delegation script hash `&quot;CURRENT_SCRIPT_HASH&quot;`\n - If the address payment credential is `VerificationKey`(`&quot;CURRENT_SCRIPT_HASH&quot;`), then `WithTheSameDelegationScriptOrKey`\n   will generate an address with delegation key hash `&quot;CURRENT_SCRIPT_HASH&quot;`\n\n ```aiken\n test multi_purpose_validator_addresses(multi_purpose_validator_address via address_fuzzer(FromScript(Fuzzed), WithTheSameDelegationScriptOrKey)) {\n   multi_purpose_validator_address |&gt; cbor.diagnostic |&gt; fuzz.label\n }\n ```\n\n See [`FromCredential`](#FromCredential) for more info on how to set the rule for the payment part.\nWithFuzzedDelegation\n Address generator with either `NoDelegation` | `Fuzzed` `DelegationScript` | `Fuzzed` `DelegationKey` | `TheSameDelegationScriptOrKey`\n staking part:\n ```aiken\n address_fuzzer(payment_part, WithFuzzedDelegation)\n ```\n See [`FromCredential`](#FromCredential) for more info on how to set the rule for the payment part.","url":"fuzz_util/fuzzer.html#WithDelegation"},{"doc":"fuzz_util/fuzzer","title":"fuzz_util/fuzzer","content":" Copied from [Anastasia-Labs/aiken-design-patterns](https://github.com/Anastasia-Labs/aiken-design-patterns/blob/main/lib/aiken-design-patterns/utils.ak)\n with a few additions that might be useful.","url":"fuzz_util/fuzzer.html"}]);